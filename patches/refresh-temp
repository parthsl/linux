Bottom: ae4add597217618ee7285f841bf1f4690e0abb80
Top:    63f95128dd0a64087c14695edb00fb4aa6f85c88
Author: Parth Shah <parth@linux.ibm.com>
Date:   2020-05-07 16:39:59 +0530

Refresh of sched-idle-add-debugging-bits

---

diff --git a/kernel/sched/idle.c b/kernel/sched/idle.c
index 9b16fa71f114..7aa0775e69c0 100644
--- a/kernel/sched/idle.c
+++ b/kernel/sched/idle.c
@@ -231,6 +231,10 @@ static void cpuidle_idle_call(void)
 static void do_idle(void)
 {
 	int cpu = smp_processor_id();
+	int pm_disabled = per_cpu(nr_lat_sensitive, cpu);
+
+	if (pm_disabled < 0)
+		pr_info("Inconsistent value of nr_lat_sensitive counter\n");
 
 	/*
 	 * If the arch has a polling bit, we maintain an invariant:
@@ -264,7 +268,7 @@ static void do_idle(void)
 		 * idle as we know that the IPI is going to arrive right away.
 		 */
 		if (cpu_idle_force_poll || tick_check_broadcast_expired() ||
-		    per_cpu(nr_lat_sensitive, cpu)) {
+		    pm_disabled) {
 			tick_nohz_idle_restart_tick();
 			cpu_idle_poll();
 		} else {
